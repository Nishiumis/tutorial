1.OVER VIEW

本手法は主に以前のNTCIR-12 STC Japanese Taskの京都工芸繊維大学と大阪教育大学の手法を基にしている。
京都工芸繊維大学の手法は内容の類似性にLDAとIDFを使用し、対話機能の関連性にCRPによるクラスタリングを行う手法。
大阪教育大学の手法はクエリの固有名詞を用いて検索語を作成し、クエリと候補共通の名詞をリポジトリ内の出現頻度に応じてスコアリングする手法である。

どちらも単語の頻度に基づいた方法で内容の類似性を高めているが、そこからさらに単語の品詞に基づいて評価することにより、文脈依存性や発展性を高めることが可能であると考えた。
そこで本手法ではTF-IDFと固有名詞によるフィルタリングを用いて話題の一貫性を保ちつつ、修飾語によるスコアリングによってより文章の内容での評価ができる方法を考案した。


2.IMPLEMENTATION
2.1　話題の一貫性
2.1.1　候補のフィルタリング
クエリの話題対して一貫性を確保するために固有名詞を用いて候補のフィルタリングを行う。
word2vecを用いてあらかじめリポジトリを学習させておくことでリポジトリ内の単語間のcos距離を得ることで意味や関連性の高い単語を得ることが出来る。


(1)クエリに固有名詞がある場合
クエリから固有名詞(q_KM)を抽出し、word2vecを用いてq_KMにcos距離が近い固有名詞(w_KM)を各5つ得る
それら以外の固有名詞を持つリプライを返答候補から外す

(2)クエリに固有名詞が無い場合
クエリから一般名詞(q_M)を抽出し、word2vecを用いてq_Mにcos距離が近い固有名詞(w_KM)を各5つ得る
それら以外の固有名詞を持つリプライを返答候補から外す
また、この場合名詞が話題において重要であるのでq_Mすべてがコメント-リプライ対に1つもないリプライを候補から外す

(3)クエリに固有名詞も名詞も無い場合
固有名詞と名詞を含むリプライを候補から外す


2.1.2 TF-IDF

2.1.1の(1)(2)に対してtf-idfを用いて一貫性の高いと思われる候補を選定する
tf-idfを用いて「クエリ」と「コメント＋リプライ」のcos距離を得る、これにより単純に「コメント」のみを使用する場合に比べてコメントとリプライに共通する単語の比率が高まり話題の一貫性の向上が得られる。
最終的な返答候補としてクエリとリプライの類似性も必要と考え、さらに「クエリ」と「リプライ」のcos距離を得る。
得られた値を掛け合わせたものを一貫性におけるスコアとする。

score(p, tra) = csim(p, ta) * csim(p, tra)

p:与えられた投稿
ta:リポジトリ内のコメント-リプライ（a = 1,2、...、n）
tra:リポジトリ内のリプライ（a = 1,2、...、n）
csim：TF-IDFを用いた文同士のcos距離

この結果から各テストデータに対して上位10個の候補を得る
これら上位10個の候補は一貫性がある候補としてこれらに対して次に文脈依存性と発展性の向上を図るスコアリングを行う。
TF-IDFによるスコアは次のスコアリングには使用しない。


2.2　文脈依存性と発展性

文脈依存性についてはクエリ中の話題に対する評価・感想であると捉え、修飾語(特に出現頻度が高めの形容詞・副詞)に注目した
クエリ中の形容詞、もしくは副詞がコメントにある場合は、リポジトリ中のその単語の出現数に基づいてスコアが加算される

Ptadj = log2(1280/tadj) (10 <= tadj <= 1280)
      0              (tadj > 1280)
      7              (tadj < 10)

tadj：形容詞のリポジトリ中での出現回数

Ptadv = log2(3200/tadv) (100 <= tadv <= 3200)
      0              (tadv > 3200)
      5              (tadv < 100)

tadv：副詞のリポジトリ中での出現回数


mecabによる品詞の判別ではリポジトリ内で形容詞は1230語、副詞は4204語用いられている。
副詞においては形容詞とスコアの差をあまりつけないために調整を行った。

次に発展性についてはクエリ中の名詞と関連する名詞があると発展性が高くなると考え、
リポジトリ中からword2vecを用いて得られたベクトルを用いて
クエリ中の一般名詞q_Mにcos距離が近い一般名詞(w_M)
クエリ中の一般名詞q_Mにcos距離が近い固有名詞(w_KM)
クエリ中の固有名詞q_KMにcos距離が近い固有名詞(w_KM2)
このw_M,w_KM,w_KM2がリプライにある場合はリポジトリ中のその単語の出現数に基づいてスコアが加算される

Ptnou = log2(16384/tnou) (10 <= tnou <= 16384)
      0              (tnou > 16384)
      14              (tnou < 10)

tnou：名詞のリポジトリ中での出現回数

Ptpno = log2(102400/tpno) (100 <= tpno <= 102400)
      0              (tpno > 102400)
      10              (tpno < 100)

tpno：固有名詞のリポジトリ中での出現回数

mecabによる品詞の判定ではリポジトリ内で名詞は182356語、固有名詞は113380語使われた

Pt = Ptadj + Ptadv + Ptnou + Ptpno

これらのスコアリング結果の上位3つを最終候補とした。
スコアリングの結果が同値である場合はtf-idfでの順位をそのまま用いた。




3.EVALUATION：結果　強かった点・弱かった点

この手法に関連する実験結果を以下に示す
(1)KIT16-J-R4：2.1.2のTF-IDFのみを使用
(2)KIT16-J-R1：フィルタリング＋TF-IDF＋文脈依存性・発展性スコアリングを行った。

表1は実行の精度に関するSTC日本語のサブタスク公式結果を示しています。

表1

結果より、KIT16-J-R1はKIT16-J-R4より高い結果を出しているものの有意な差は見られない。
また、ルール2においてもルール1より差は見られないため文脈依存性・発展性スコアリングが目的の機能を果たしていない。
以上より全体でKIT16-J-R1がKIT16-J-R4よりも高い結果を出したのは固有名詞によるフィルタリングの結果だと考えられる。

またTF-IDFのみで実行した場合、TF-IDF + Scoring、TF-IDF + Filteringのみで実行した場合の結果がどの程度Filtering + TF-IDF + Scoringに影響しているかを比較した。

・TFIDFのみの結果がFormalRUNの結果で残っていればそれはTFIDFの影響
・TFIDF+Scoreの結果でTFIDFのみの結果にないものがFormalRUNの結果で残っていればそれはScoreの影響
・TFIDF+Filterの結果でTFIDFのみの結果にないものがFormalRUNの結果で残っていればそれはFilterの影響
・どの結果にも無かったものがFormalRUNの結果で現れていればそれはScore＋Filterの影響


最終候補TOP3がどの影響で選択されたか
TFIDF	Score	Filter	Score+Filter	SUM
153	13	89	45		300

最終候補TOP1がどの影響で選択されたか
TFIDF	Score	Filter	Score+Filter	SUM
56	9	15	20		100

以上よりTOP3,TOP1どちらにおいてもTF-IDFの結果が半数程そのまま選択された。
ScoreはTF-IDFと組み合わせただけでは1割程の影響しかないが、Filterとも組み合わせることで最終候補に影響を与えた。
Filterは影響が大きく、TF-IDFのみの結果とTFIDF+Filterの結果の差は125個あったがそのうち89個がそのまま最終候補となった。

その他、KIT16-J-R1は計算に時間がかかる。特に評価する単語の数が多いと長くなるため単語の数の絞り込みやより良い評価方法が必要。
文脈依存性・発展性スコアリングでスコアリングされたリプライは最終候補300のうち91個,与えられたコメント100に対しては44個となり、コメントに対するスコアリングとして機能していない。
固有名詞とword2vecを用いた関連語によるフィルタリングによって話題の一貫性の向上が見られる。
